<?php
/**
 * @file
 * Description here.
 */

/**
 * hook_menu
 */
function holmes_menu() {
  $items = array();
  $items['admin/structure/holmes'] = array(
    'title' => 'Hook detective',
    'page callback' => 'holmes_list',
    'access arguments' => array('access holmes'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'includes/holmes.page.inc'
  );
  $items['admin/structure/holmes/fields'] = array(
    'title' => 'Fields',
    'page callback' => 'holmes_fields',
    'access callback' => TRUE,
    //array('access holmes'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'includes/structure.page.inc'
  );
  $items['admin/structure/holmes/ents'] = array(
    'title' => 'Entities',
    'page callback' => 'holmes_ents',
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
    'file' => 'includes/structure.page.inc'
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function holmes_permission() {
  return array(
    'access holmes' => array(
      'title' => t('Access Holmes'),
      'description' => t('For the hooks sherlocks'),
    ),
  );
}

/**
 * show the source code of a provided function
 *
 * @todo
 * - is there an easier way of doing this ?
 * - add syntax (later - can use a filter or a js )
 */
function holmes_func_source($fname) {
  // TODO: what if it aint found (function, file ...)
  $func = new ReflectionFunction($fname);
  // TODO: parse the DocComment ?
  //echo $func->getDocComment();
  $fle = file($func->getFileName());
  $out = '';
  for ($ln = $func->getStartLine(); $ln <=  $func->getEndLine() ; $ln ++ ) {
  $out .=$fle[$ln-1];
  }
  return $out;
//echo $func;
}

